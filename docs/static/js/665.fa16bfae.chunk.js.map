{"version":3,"file":"static/js/665.fa16bfae.chunk.js","mappings":"2QA8DA,EAxDsB,WAClB,OAAwBA,EAAAA,EAAAA,MAAhBC,OAAAA,OAAR,MAAiB,GAAjB,EAEA,GAAsBC,EAAAA,EAAAA,MAAfC,GAAP,eACA,GAAgCC,EAAAA,EAAAA,YAAhC,eAAOC,EAAP,KAAiBC,EAAjB,KAEMC,GAAYC,EAAAA,EAAAA,cAAW,uBAAC,iHACUC,IADV,sCACnBC,EADmB,KACXC,EADW,KAGpBC,EAA6B,CAC/BC,OAAQ,CACJC,KAAMC,EAAAA,GACNC,SAAUD,EAAAA,IAEdE,KAAM,CACFC,GAAIR,EAAOQ,GACXC,MAAOT,EAAOS,MACdC,QAASV,EAAOW,SAAS,GAAGC,IAC5BC,UAA+B,OAApBb,EAAOa,UAAqB,QAAU,QACjDC,cAAed,EAAOe,SAASD,cAC/BE,cAAehB,EAAOgB,cACtBf,YAAaA,EAAYgB,YAE7BC,MAAO,CACHC,SAAUnB,EAAOoB,YACjBC,OAAQrB,EAAOkB,MACfI,SAAU,GAEdC,WAAY,CAACvB,EAAOwB,cAtBE,kBAwBnBtB,GAxBmB,2CAyB3B,CAACX,IAMJ,OAJAkC,EAAAA,EAAAA,YAAU,WACN5B,IAAY6B,MAAK,SAACC,GAAD,OAAW/B,EAAY+B,QACzC,CAAC9B,EAAWJ,IAER,CACHE,SAAAA,GAGJ,SAASI,IACL,IAAM6B,EAAoBC,IAAAA,IAAA,6CACuCtC,IAC5DmC,MAAK,qBAAGI,QAEPC,EAAqBF,IAAAA,IAAA,6CAEmBtC,EAFnB,iBAItBmC,MAAK,qBAAGI,QAEb,OAAOE,QAAQC,IAAI,CAACL,EAAmBG,M,SCnB/C,EAlCwB,WAEpB,IAAQpC,EAAauC,IAAbvC,SAER,OACI,iBAAKwC,UAAU,oBAAf,WACI,gBAAKA,UAAU,GAAf,UACI,SAACC,EAAA,EAAD,CAAeC,iBAAyB,OAAR1C,QAAQ,IAARA,OAAA,EAAAA,EAAU4B,aAAc,QAE5D,iBAAKY,UAAU,iBAAiB3B,GAAE,OAAEb,QAAF,IAAEA,OAAF,EAAEA,EAAUY,KAAKC,GAAnD,WACI,gBAAK2B,UAAU,qBAAf,UACI,gBAAKA,UAAU,WAAWG,IAAI,mCAAmCC,IAAG,OAAE5C,QAAF,IAAEA,OAAF,EAAEA,EAAUY,KAAKG,aAEzF,iBAAKyB,UAAU,wBAAf,WACI,gBAAKA,UAAU,GAAf,UACI,kBAAMA,UAAU,WAAhB,iBAA4BxC,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAUY,KAAKM,UAA3C,aAAyDlB,QAAzD,IAAyDA,OAAzD,EAAyDA,EAAUY,KAAKS,cAAxE,kBAEJ,0BACI,+BAAKrB,QAAL,IAAKA,OAAL,EAAKA,EAAUY,KAAKE,WAExB,0BACI,kBAAM0B,UAAU,QAAhB,sBAA2BxC,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAUuB,MAAMG,aAE/C,mBAAQc,UAAU,cAAlB,yBAEJ,iBAAKA,UAAU,6BAAf,WACI,yDACA,cAAGA,UAAU,cAAb,gBAA4BxC,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAUY,KAAKN,yB,iEChBzDuC,EAAaC,EAAAA,GAAAA,KAAH,4IAYhB,IAzBsB,SAACC,GACnB,OACI,SAACF,EAAD,CAAYL,UAAU,aAAtB,SACKO,EAAML,gBAAgBM,KAAI,SAACpC,EAAMqC,GAAP,OACvB,UAAC,WAAD,WACKA,EAAQ,GAAK,KACd,iBAAMT,UAAU,UAAhB,SAA2B5B,MAFVqC,U","sources":["pages/itemDetail/hooks/useItemDetail.ts","pages/itemDetail/SiteDetailItem.tsx","shared/BreadcrumbBar.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { ItemDetailResult, DescriptionResult, ItemDetailData } from \"../types\";\r\nimport texts from \"../../../utils/text.json\";\r\n\r\nconst useItemDetail = () => {\r\n    const { itemId = \"\" } = useParams();\r\n\r\n    const [searchParam] = useSearchParams();\r\n    const [dataItem, setDataItem] = useState<ItemDetailData>();\r\n\r\n    const _doSearch = useCallback(async () => {\r\n        const [detail, description] = await _getData();\r\n\r\n        const searchData: ItemDetailData = {\r\n            author: {\r\n                name: texts.NAME,\r\n                lastname: texts.LAST_NAME,\r\n            },\r\n            item: {\r\n                id: detail.id,\r\n                title: detail.title,\r\n                picture: detail.pictures[0].url,\r\n                condition: detail.condition == \"new\" ? \"nuevo\" : \"usado\",\r\n                free_shipping: detail.shipping.free_shipping,\r\n                sold_quantity: detail.sold_quantity,\r\n                description: description.plain_text,\r\n            },\r\n            price: {\r\n                currency: detail.currency_id,\r\n                amount: detail.price,\r\n                decimals: 2,\r\n            },\r\n            categories: [detail.category_id],\r\n        };\r\n        return searchData;\r\n    }, [itemId]);\r\n\r\n    useEffect(() => {\r\n        _doSearch().then((items) => setDataItem(items));\r\n    }, [_doSearch, searchParam]);\r\n\r\n    return {\r\n        dataItem,\r\n    };\r\n\r\n    function _getData(): Promise<[ItemDetailResult, DescriptionResult]> {\r\n        const itemDetailPromise = axios\r\n            .get<ItemDetailResult>(`https://api.mercadolibre.com/items/${itemId}`)\r\n            .then(({ data }) => data);\r\n\r\n        const descriptionPromise = axios\r\n            .get<DescriptionResult>(\r\n                `https://api.mercadolibre.com/items/${itemId}/description`\r\n            )\r\n            .then(({ data }) => data);\r\n\r\n        return Promise.all([itemDetailPromise, descriptionPromise]);\r\n    }\r\n};\r\n\r\nexport default useItemDetail;","import BreadcrumbBar from '../../shared/BreadcrumbBar';\r\nimport useItemDetail from './hooks/useItemDetail';\r\nimport './item.scss'\r\n\r\n\r\nconst SiteDetailItems = () => {\r\n\r\n    const { dataItem } = useItemDetail();\r\n\r\n    return (\r\n        <div className='results-container'>\r\n            <nav className=''>\r\n                <BreadcrumbBar itemsBreadcrumb={dataItem?.categories || []} />\r\n            </nav>\r\n            <div className='container-item' id={dataItem?.item.id}>\r\n                <div className='container-item-img'>\r\n                    <img className='img-item' alt=\"Descripcion de la imagen detalle\" src={dataItem?.item.picture}></img>\r\n                </div>\r\n                <div className='container-item-detail'>\r\n                    <div className=''>\r\n                        <span className='quantity'>{dataItem?.item.condition} - {dataItem?.item.sold_quantity} vendidos</span>\r\n                    </div>\r\n                    <div>\r\n                        <h1>{dataItem?.item.title}</h1>\r\n                    </div>\r\n                    <div>\r\n                        <span className='price'>$ {dataItem?.price.amount}</span>\r\n                    </div>\r\n                    <button className='btn-primary'>Comprar</button>\r\n                </div>\r\n                <div className='container-item-description'>\r\n                    <h2>Descripci√≥n del producto</h2>\r\n                    <p className='description'>{dataItem?.item.description}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SiteDetailItems","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst BreadcrumbBar = (props: { itemsBreadcrumb: string[] }) => {\r\n    return (\r\n        <Breadcrumb className=\"breadcrumb\">\r\n            {props.itemsBreadcrumb.map((item, index) => (\r\n                <React.Fragment key={index}>\r\n                    {index > 0 && '>'}\r\n                    <span className='segment'>{item}</span>\r\n                </React.Fragment>\r\n            ))}\r\n        </Breadcrumb>\r\n    )\r\n}\r\n\r\nconst Breadcrumb = styled.span`\r\ndisplay: inline-flex;\r\ngap: 8px;\r\npadding: 16px 0;\r\ncolor: #999;\r\nfont-size: 14px;\r\nspan{\r\n    cursor: pointer;\r\n}\r\n`;\r\n\r\n\r\nexport default BreadcrumbBar"],"names":["useParams","itemId","useSearchParams","searchParam","useState","dataItem","setDataItem","_doSearch","useCallback","_getData","detail","description","searchData","author","name","texts","lastname","item","id","title","picture","pictures","url","condition","free_shipping","shipping","sold_quantity","plain_text","price","currency","currency_id","amount","decimals","categories","category_id","useEffect","then","items","itemDetailPromise","axios","data","descriptionPromise","Promise","all","useItemDetail","className","BreadcrumbBar","itemsBreadcrumb","alt","src","Breadcrumb","styled","props","map","index"],"sourceRoot":""}